@isTest
private class AttendanceTriggerHandlerTest 
{

    private static testMethod void TestAttendanceTriggerHandler() 
    {
        Account objAccount = new Account(Name = 'Test Account - 01', Time_Zone__c = '(GMT-03:00) Atlantic Daylight Time (America/Halifax)');
        insert objAccount; 
        
        Contact objContact = new Contact(FirstName = 'Test', LastName = 'Contact - 01', AccountId = objAccount.Id);
        insert objContact;
        
        Contact objContact2 = new Contact(FirstName = 'Test', LastName =  'Contact - 02', AccountId = objAccount.Id);
        insert objContact2;
        
        ByPassSessionRegTrigger__c sessReg = new ByPassSessionRegTrigger__c(Disabled_Waiver_Authorization__c = false);
        insert sessReg;
        
        Listing__c objListing = new Listing__c(Name = 'Test Listing - 01');
        insert objListing;
        
        List<Listing_Session__c> listingSessionToInsert = new List<Listing_Session__c>();
        Listing_Session__c objLSPar = new Listing_Session__c(Name = 'Test LS Par', Listing__c=objListing.Id, Session_Start_Date_Time__c=DateTime.Now(), Session_End_Date_Time__c=DateTime.Now().addDays(4),Primary_Program_Level_Restriction__c='');
        listingSessionToInsert.add(objLSPar);
        Listing_Session__c objLSAce = new Listing_Session__c(Name='Test LS Ace', Listing__c=objListing.Id, Session_Start_Date_Time__c=DateTime.Now(), Session_End_Date_Time__c=DateTime.Now().addDays(6), Primary_Program_Level_Restriction__c='');
        listingSessionToInsert.add(objLSAce);
        Listing_Session__c objLSEagle = new Listing_Session__c(Name='Test LS Eagle', Listing__c=objListing.Id, Session_Start_Date_Time__c=DateTime.Now(), Session_End_Date_Time__c=DateTime.Now().addDays(8), Primary_Program_Level_Restriction__c='');
        listingSessionToInsert.add(objLSEagle);
        Listing_Session__c objLSBirdie = new Listing_Session__c(Name='Test LS Birdie', Listing__c=objListing.Id, Session_Start_Date_Time__c=DateTime.Now(), Session_End_Date_Time__c=DateTime.Now().addDays(10), Primary_Program_Level_Restriction__c='');
        listingSessionToInsert.add(objLSBirdie);
        Listing_Session__c objLSPlayer = new Listing_Session__c(Name='Test LS Player', Listing__c=objListing.Id, Session_Start_Date_Time__c=DateTime.Now(), Session_End_Date_Time__c=DateTime.Now().addDays(12), Primary_Program_Level_Restriction__c='');
        listingSessionToInsert.add(objLSPlayer);
        insert listingSessionToInsert;
        
        List<Classes__c> lstClassesToUpdate = new List<Classes__c>();
        lstClassesToUpdate.add(new Classes__c(Name = 'Test Class Par',Listing_Session__c = objLSPar.Id));
        lstClassesToUpdate.add(new Classes__c(Name = 'Test Class Ace',Listing_Session__c = objLSAce.Id));
        lstClassesToUpdate.add(new Classes__c(Name = 'Test Class Eagle',Listing_Session__c = objLSEagle.Id));
        lstClassesToUpdate.add(new Classes__c(Name = 'Test Class Birdie',Listing_Session__c = objLSBirdie.Id));
        lstClassesToUpdate.add(new Classes__c(Name = 'Test Class Player',Listing_Session__c = objLSPlayer.Id));
        upsert lstClassesToUpdate;
        
        List<Session_Registration__c> lstSessionRegistrationToUpdate = new List<Session_Registration__c>();
        lstSessionRegistrationToUpdate.add(new Session_Registration__c(Contact__c = objContact.Id,Listing_Session__c = objLSPar.Id));
        lstSessionRegistrationToUpdate.add(new Session_Registration__c(Contact__c = objContact.Id,Listing_Session__c = objLSAce.Id));
        lstSessionRegistrationToUpdate.add(new Session_Registration__c(Contact__c = objContact.Id,Listing_Session__c = objLSEagle.Id));
        lstSessionRegistrationToUpdate.add(new Session_Registration__c(Contact__c = objContact.Id,Listing_Session__c = objLSBirdie.Id));
        lstSessionRegistrationToUpdate.add(new Session_Registration__c(Contact__c = objContact.Id,Listing_Session__c = objLSPlayer.Id));
        upsert lstSessionRegistrationToUpdate;
        
        List<Listing_Session__c> lstListSessionToUpdate = new List<Listing_Session__c>();
        lstListSessionToUpdate.add(new Listing_Session__c(Id = objLSPar.Id, Primary_Program_Level_Restriction__c = 'Par'));
        lstListSessionToUpdate.add(new Listing_Session__c(Id = objLSAce.Id, Primary_Program_Level_Restriction__c = 'Ace'));
        lstListSessionToUpdate.add(new Listing_Session__c(Id = objLSEagle.Id, Primary_Program_Level_Restriction__c = 'Eagle'));
        lstListSessionToUpdate.add(new Listing_Session__c(Id = objLSBirdie.Id, Primary_Program_Level_Restriction__c = 'Birdie'));
        lstListSessionToUpdate.add(new Listing_Session__c(Id = objLSPlayer.Id, Primary_Program_Level_Restriction__c = 'PLAYer'));
        upsert lstListSessionToUpdate;
        
        Engagement_Type__c objEngType = new Engagement_Type__c(Contact__c = objContact.Id);
        insert objEngType;
        
        Engagement_Type__c objEngType2 = new Engagement_Type__c(Contact__c = objContact2.Id);
        insert objEngType2;
        
        List<Attendance__c> lstAttendanceToInsert = new List<Attendance__c>();
        lstAttendanceToInsert.add(new Attendance__c(Classes__c = lstClassesToUpdate[0].Id, Session_Registration__c = lstSessionRegistrationToUpdate[0].Id, Attended__c = true));
        lstAttendanceToInsert.add(new Attendance__c(Classes__c = lstClassesToUpdate[1].Id, Session_Registration__c = lstSessionRegistrationToUpdate[1].Id, Attended__c = true));
        lstAttendanceToInsert.add(new Attendance__c(Classes__c = lstClassesToUpdate[2].Id, Session_Registration__c = lstSessionRegistrationToUpdate[2].Id, Attended__c = true));
        lstAttendanceToInsert.add(new Attendance__c(Classes__c = lstClassesToUpdate[3].Id, Session_Registration__c = lstSessionRegistrationToUpdate[3].Id, Attended__c = true));
        lstAttendanceToInsert.add(new Attendance__c(Classes__c = lstClassesToUpdate[4].Id, Session_Registration__c = lstSessionRegistrationToUpdate[4].Id, Attended__c = true));
        insert lstAttendanceToInsert;
        
        List<Attendance__c> lstAttendance = new List<Attendance__c>([SELECT Id, Attended__c, Session_Registration__r.Listing_Session__r.Primary_Program_Level_Restriction__c FROM Attendance__c]);
        delete lstAttendance;
        undelete lstAttendance;
        
        List<Attendance__c> lstAttendanceToupdate = new List<Attendance__c>();
        for(Attendance__c objAttendance : lstAttendance)
        {
            objAttendance.Attended__c = false;
            lstAttendanceToupdate.add(objAttendance);
        }
                
        update lstAttendanceToUpdate;
        
    }
    public static testmethod void testParticipationStatus() {
        
        Account objAccount = new Account(Name = 'Test Account - 01', Time_Zone__c = '(GMT-03:00) Atlantic Daylight Time (America/Halifax)');
        insert objAccount;
        
        Contact objContact = new Contact(FirstName = 'Test', LastName = 'Contact - 01', AccountId = objAccount.Id);
        insert objContact; 
        
        ByPassSessionRegTrigger__c sessReg = new ByPassSessionRegTrigger__c(Disabled_Waiver_Authorization__c = false);
        insert sessReg;
        
        Listing__c objListing = new Listing__c(Name = 'Test Listing - 01');
        insert objListing;
        
        Listing_Session__c objLSPar = new Listing_Session__c(Name = 'Test LS Par', Listing__c=objListing.Id, Session_Start_Date_Time__c=DateTime.Now(), Session_End_Date_Time__c=DateTime.Now().addDays(4),Primary_Program_Level_Restriction__c='');
 		insert objLSPar;
        
        Classes__c cls = new Classes__c(Name = 'Test Class Par', Listing_Session__c = objLSPar.Id);
        insert cls;
        
        Session_Registration__c sReg = new Session_Registration__c(Contact__c = objContact.Id,Listing_Session__c = objLSPar.Id);
        insert sReg;
        
        Id recordTypeId = Schema.SObjectType.Engagement_Type__c.getRecordTypeInfosByName().get('Participant').getRecordTypeId();
        
        Engagement_Type__c objEngType = new Engagement_Type__c(Contact__c = objContact.Id, Participation_Status__c = 'Previous Participant', RecordtypeId = recordTypeId);
        insert objEngType;
        
        system.debug('++++++++'+objEngType );
        
        System.debug('Engagement Type==='+[Select Id,Participation_Status__c From Engagement_Type__c Where Id =: objEngType.Id]);
        
        List<Attendance__c> lstAttendanceToInsert = new List<Attendance__c>();
        lstAttendanceToInsert.add(new Attendance__c(Classes__c = cls.Id, Session_Registration__c = sReg.Id, Attended__c = true));        
        upsert lstAttendanceToInsert;
        
        System.assertEquals(1, [Select Id From  Engagement_Type__c where Participation_Status__c = 'Participant'].size());
        
    }
}
